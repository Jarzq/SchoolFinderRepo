// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolFinder.Data;

#nullable disable

namespace SchoolFinder.Migrations
{
    [DbContext(typeof(SchoolfinderContext))]
    [Migration("20240207171353_addedFullName")]
    partial class addedFullName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SchoolFinder.models.SchoolEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Dzielnica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MaksymalnePunkty")
                        .HasColumnType("float");

                    b.Property<double>("MinimalnePunkty")
                        .HasColumnType("float");

                    b.Property<string>("NazwaOddzialu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NazwaSzkoly")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SchoolType")
                        .HasColumnType("int");

                    b.Property<int?>("SpecializationId")
                        .HasColumnType("int");

                    b.Property<string>("SymbolOddzialu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SpecializationId");

                    b.ToTable("SchoolEntities");
                });

            modelBuilder.Entity("SchoolFinder.Models.SchoolEntityLanguageSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("LanguageSubjectId")
                        .HasColumnType("int");

                    b.Property<int>("SchoolEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageSubjectId");

                    b.HasIndex("SchoolEntityId");

                    b.ToTable("SchoolEntityLanguageSubjects");
                });

            modelBuilder.Entity("SchoolFinder.Models.SchoolEntitySubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("SchoolEntityId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SchoolEntityId");

                    b.HasIndex("SubjectId");

                    b.ToTable("SchoolEntitySubjects");
                });

            modelBuilder.Entity("SchoolFinder.Models.Specialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Specializations");
                });

            modelBuilder.Entity("SchoolFinder.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("SchoolFinder.models.SchoolEntity", b =>
                {
                    b.HasOne("SchoolFinder.Models.Specialization", "Specialization")
                        .WithMany("SchoolEntities")
                        .HasForeignKey("SpecializationId");

                    b.Navigation("Specialization");
                });

            modelBuilder.Entity("SchoolFinder.Models.SchoolEntityLanguageSubject", b =>
                {
                    b.HasOne("SchoolFinder.Models.Subject", "LanguageSubject")
                        .WithMany("SchoolEntityLanguageSubjects")
                        .HasForeignKey("LanguageSubjectId");

                    b.HasOne("SchoolFinder.models.SchoolEntity", "SchoolEntity")
                        .WithMany("SchoolEntityLanguageSubjects")
                        .HasForeignKey("SchoolEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageSubject");

                    b.Navigation("SchoolEntity");
                });

            modelBuilder.Entity("SchoolFinder.Models.SchoolEntitySubject", b =>
                {
                    b.HasOne("SchoolFinder.models.SchoolEntity", "SchoolEntity")
                        .WithMany("SchoolEntitySubjects")
                        .HasForeignKey("SchoolEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolFinder.Models.Subject", "Subject")
                        .WithMany("SchoolEntitySubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SchoolEntity");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("SchoolFinder.models.SchoolEntity", b =>
                {
                    b.Navigation("SchoolEntityLanguageSubjects");

                    b.Navigation("SchoolEntitySubjects");
                });

            modelBuilder.Entity("SchoolFinder.Models.Specialization", b =>
                {
                    b.Navigation("SchoolEntities");
                });

            modelBuilder.Entity("SchoolFinder.Models.Subject", b =>
                {
                    b.Navigation("SchoolEntityLanguageSubjects");

                    b.Navigation("SchoolEntitySubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
